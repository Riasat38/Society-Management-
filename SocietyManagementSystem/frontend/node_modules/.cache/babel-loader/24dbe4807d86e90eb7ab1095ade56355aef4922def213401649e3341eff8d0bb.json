{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\Society-Management-\\\\SocietyManagementSystem\\\\frontend\\\\src\\\\components\\\\Directory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from './Sidebar';\nimport './Directory.css';\nimport { getUserFromStorage } from './utils'; // Adjust the import path as needed\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DirectoryPage = () => {\n  _s();\n  const [admins, setAdmins] = useState([]);\n  const [residents, setResidents] = useState([]);\n  const [staffs, setStaffs] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const user = getUserFromStorage();\n      if (!user) {\n        // Redirect to login if no user is found\n        window.location.href = '/society/login';\n        return;\n      }\n      const token = user.token;\n      try {\n        const adminResponse = await fetch('http://localhost:5000/api/admin', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!adminResponse.ok) {\n          throw new Error('Failed to fetch admin data');\n        }\n        const adminData = await adminResponse.json();\n        setAdmins(adminData);\n        console.log('Admin data fetched:', adminData);\n        const residentStaffResponse = await fetch('http://localhost:5000/api/residents-staffs', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (!residentStaffResponse.ok) {\n          throw new Error('Failed to fetch resident and staff data');\n        }\n        const residentStaffData = await residentStaffResponse.json();\n        console.log('Resident and staff data fetched:', residentStaffData);\n\n        // Process and set residents and staffs data\n        setResidents(residentStaffData.residents);\n        setStaffs(residentStaffData.staffs);\n      } catch (error) {\n        console.error('Failed to fetch data:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const renderTable = (title, data, columns) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"directory-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map(col => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: col\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map(col => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: item[col.toLowerCase()]\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this))\n        }, item._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Directory\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), renderTable('Admins', admins, ['Name', 'Email', 'Contact']), renderTable('Residents', residents, ['Name', 'Email', 'Contact', 'Flatno']), renderTable('Staffs', staffs, ['Name', 'Email', 'Contact', 'Role'])]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n_s(DirectoryPage, \"HeOFw+AEWLrYUZ/sUD02QBDWhm0=\");\n_c = DirectoryPage;\nexport default DirectoryPage;\nvar _c;\n$RefreshReg$(_c, \"DirectoryPage\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","getUserFromStorage","jsxDEV","_jsxDEV","DirectoryPage","_s","admins","setAdmins","residents","setResidents","staffs","setStaffs","fetchData","user","window","location","href","token","adminResponse","fetch","headers","ok","Error","adminData","json","console","log","residentStaffResponse","residentStaffData","error","renderTable","title","data","columns","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","col","item","toLowerCase","_id","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/GitHub/Society-Management-/SocietyManagementSystem/frontend/src/components/Directory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport './Directory.css';\r\nimport { getUserFromStorage } from './utils'; // Adjust the import path as needed\r\n\r\nconst DirectoryPage = () => {\r\n  const [admins, setAdmins] = useState([]);\r\n  const [residents, setResidents] = useState([]);\r\n  const [staffs, setStaffs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const user = getUserFromStorage();\r\n\r\n      if (!user) {\r\n        // Redirect to login if no user is found\r\n        window.location.href = '/society/login';\r\n        return;\r\n      }\r\n\r\n      const token = user.token;\r\n\r\n      try {\r\n        const adminResponse = await fetch('http://localhost:5000/api/admin', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        if (!adminResponse.ok) {\r\n          throw new Error('Failed to fetch admin data');\r\n        }\r\n        const adminData = await adminResponse.json();\r\n        setAdmins(adminData);\r\n        console.log('Admin data fetched:', adminData);\r\n\r\n        const residentStaffResponse = await fetch('http://localhost:5000/api/residents-staffs', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        if (!residentStaffResponse.ok) {\r\n          throw new Error('Failed to fetch resident and staff data');\r\n        }\r\n        const residentStaffData = await residentStaffResponse.json();\r\n        console.log('Resident and staff data fetched:', residentStaffData);\r\n\r\n        // Process and set residents and staffs data\r\n        setResidents(residentStaffData.residents);\r\n        setStaffs(residentStaffData.staffs);\r\n      } catch (error) {\r\n        console.error('Failed to fetch data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const renderTable = (title, data, columns) => (\r\n    <div className=\"directory-table\">\r\n      <h3>{title}</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {columns.map((col) => (\r\n              <th key={col}>{col}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((item) => (\r\n            <tr key={item._id}>\r\n              {columns.map((col) => (\r\n                <td key={col}>{item[col.toLowerCase()]}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <Sidebar />\r\n      <div className=\"main-content\">\r\n        <h2>Directory</h2>\r\n        {renderTable('Admins', admins, ['Name', 'Email', 'Contact'])}\r\n        {renderTable('Residents', residents, ['Name', 'Email', 'Contact', 'Flatno'])}\r\n        {renderTable('Staffs', staffs, ['Name', 'Email', 'Contact', 'Role'])}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DirectoryPage;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}