{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\Society-Management-\\\\SocietyManagementSystem\\\\frontend\\\\src\\\\components\\\\Helpwall.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Sidebar from './Sidebar';\nimport './Helpwall.css';\nimport { getUserFromStorage } from './utils.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HelpWall = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [helpDescr, setHelpDescr] = useState('');\n  const [bloodDonation, setBloodDonation] = useState(false);\n  const fetchPosts = async () => {\n    const token = getUserFromStorage();\n    try {\n      const response = await axios.get('http://localhost:4069/society/homepage/wall', {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setPosts(response.data);\n      console.log('Help posts fetched:', response.data);\n    } catch (error) {\n      console.error('Failed to fetch data:', error);\n    }\n  };\n  useEffect(() => {\n    const token = getUserFromStorage();\n    if (!token) {\n      window.location.href = '/society/login';\n      return;\n    }\n    setUser({\n      token\n    });\n    fetchPosts();\n  }, []);\n\n  /*useEffect(() => {\r\n    const token = getUserFromStorage();\r\n      if (!token) {\r\n      // Redirect to login if no user is found\r\n      window.location.href = '/society/login';\r\n      return;\r\n    }\r\n      setUser({ token }); // Setting the token in the user state\r\n      const fetchPosts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:4069/society/homepage/wall', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        setPosts(response.data);\r\n        console.log('Help posts fetched:', response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch data:', error);\r\n      }\r\n    };\r\n      fetchPosts();\r\n  }, []); */\n\n  const handleCreatePost = async () => {\n    const token = user.token;\n    const newPost = {\n      help_descr: helpDescr,\n      bloodDonation\n    };\n    try {\n      const response = await axios.post('http://localhost:4069/society/homepage/wall', newPost, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Create post response:', response.data);\n      setPosts([...posts, response.data.helpPost]);\n      setHelpDescr('');\n      setBloodDonation(false);\n      console.log('Help post created:', response.data.helpPost);\n    } catch (error) {\n      console.error('Failed to create post:', error);\n      alert(`Failed to create post: ${error.response ? error.response.data.error : error.message}`);\n    }\n  };\n  const handleUpdatePost = async (postId, updatedDescription) => {\n    const token = user.token;\n    try {\n      const response = await axios.put(`http://localhost:4069/society/homepage/wall/${postId}/update`, {\n        description: updatedDescription\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\n      console.log('Help post updated:', response.data.helpPost);\n    } catch (error) {\n      console.error('Failed to update post:', error);\n    }\n  };\n  const handleResolvePost = async postId => {\n    const token = user.token;\n    try {\n      const response = await axios.put(`http://localhost:4069/society/homepage/wall/${postId}/resolve`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\n      console.log('Help post resolved:', response.data.helpPost);\n    } catch (error) {\n      console.error('Failed to resolve post:', error);\n    }\n  };\n  const handleDeletePost = async postId => {\n    const token = user.token;\n    try {\n      await axios.delete(`http://localhost:4069/society/homepage/wall/${postId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setPosts(posts.filter(post => post._id !== postId));\n      console.log('Help post deleted:', postId);\n    } catch (error) {\n      console.error('Failed to delete post:', error);\n    }\n  };\n  const handleAddComment = async (postId, commentContent) => {\n    const token = user.token;\n    try {\n      const response = await axios.post(`http://localhost:4069/society/homepage/wall/${postId}/comment`, {\n        content: commentContent\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\n      console.log('Comment added:', response.data.helpPost);\n    } catch (error) {\n      console.error('Failed to add comment:', error);\n    }\n  };\n  const handleUpdateComment = async (postId, commentId, updatedContent) => {\n    const token = user.token;\n    try {\n      const response = await axios.put(`http://localhost:4069/society/homepage/wall/${postId}/comment/${commentId}`, {\n        content: updatedContent\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\n      console.log('Comment updated:', response.data.helpPost);\n    } catch (error) {\n      console.error('Failed to update comment:', error);\n    }\n  };\n  const handleDeleteComment = async (postId, commentId) => {\n    const token = user.token;\n    try {\n      const response = await axios.delete(`http://localhost:4069/society/homepage/wall/${postId}/comment/${commentId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\n      console.log('Comment deleted:', response.data.helpPost);\n    } catch (error) {\n      console.error('Failed to delete comment:', error);\n    }\n  };\n  const renderPosts = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-list\",\n    children: posts.map(post => {\n      var _post$user;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 14\n          }, this), \" \", post.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this), post.bloodDonation && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Blood Donation Needed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Posted by:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 14\n          }, this), \" \", post.user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Flat Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 14\n          }, this), \" \", post.user.flatno]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Contact Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 14\n          }, this), \" \", post.user.contactno]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this), user.id === ((_post$user = post.user) === null || _post$user === void 0 ? void 0 : _post$user._id) && !post.resolve_status && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdatePost(post._id, prompt('Update description:', post.description)),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeletePost(post._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleResolvePost(post._id),\n            children: \"Resolve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-section\",\n          children: [post.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"comment-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: comment.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"By:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 20\n              }, this), \" \", comment.user.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), user.id === comment.user._id && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleUpdateComment(post._id, comment._id, prompt('Update comment:', comment.content)),\n                children: \"Update\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDeleteComment(post._id, comment._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 19\n            }, this)]\n          }, comment._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Add a comment\",\n            onBlur: e => handleAddComment(post._id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddComment(post._id, commentContent),\n            children: \"Submit Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"HelpWall\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-sections\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-post-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-post-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Create a Help Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: helpDescr,\n                onChange: e => setHelpDescr(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Blood Donation Needed:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: bloodDonation,\n                onChange: e => setBloodDonation(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCreatePost,\n              children: \"Create Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-posts-section\",\n          children: renderPosts()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 238,\n    columnNumber: 5\n  }, this);\n};\n_s(HelpWall, \"DA/wpdMv7weQnorQEkzgLSh7YaA=\");\n_c = HelpWall;\nexport default HelpWall;\nvar _c;\n$RefreshReg$(_c, \"HelpWall\");","map":{"version":3,"names":["React","useState","useEffect","axios","Sidebar","getUserFromStorage","jsxDEV","_jsxDEV","HelpWall","_s","user","setUser","posts","setPosts","helpDescr","setHelpDescr","bloodDonation","setBloodDonation","fetchPosts","token","response","get","headers","data","console","log","error","window","location","href","handleCreatePost","newPost","help_descr","post","helpPost","alert","message","handleUpdatePost","postId","updatedDescription","put","description","map","_id","handleResolvePost","handleDeletePost","delete","filter","handleAddComment","commentContent","content","handleUpdateComment","commentId","updatedContent","handleDeleteComment","renderPosts","className","children","_post$user","fileName","_jsxFileName","lineNumber","columnNumber","name","flatno","contactno","id","resolve_status","onClick","prompt","comments","comment","placeholder","onBlur","e","target","value","onChange","type","checked","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/GitHub/Society-Management-/SocietyManagementSystem/frontend/src/components/Helpwall.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Sidebar from './Sidebar';\r\nimport './Helpwall.css';\r\nimport { getUserFromStorage } from './utils.js';\r\n\r\nconst HelpWall = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [posts, setPosts] = useState([]);\r\n  const [helpDescr, setHelpDescr] = useState('');\r\n  const [bloodDonation, setBloodDonation] = useState(false);\r\n\r\n  const fetchPosts = async () => { \r\n    const token = getUserFromStorage(); \r\n    try { \r\n        const response = await axios.get('http://localhost:4069/society/homepage/wall', { \r\n          headers: { 'Authorization': `Bearer ${token}`, \r\n          'Content-Type': 'application/json' \r\n        } \r\n    }); \r\n    setPosts(response.data); \r\n    console.log('Help posts fetched:', response.data); \r\n  } catch (error) { \r\n    console.error('Failed to fetch data:', error); \r\n  } \r\n}; \r\n\r\nuseEffect(() => { \r\n    const token = getUserFromStorage(); \r\n    if (!token) { \r\n        window.location.href = '/society/login'; \r\n        return; \r\n    } \r\n    setUser({ token }); \r\n    fetchPosts(); \r\n}, []);\r\n\r\n\r\n\r\n  /*useEffect(() => {\r\n    const token = getUserFromStorage();\r\n\r\n    if (!token) {\r\n      // Redirect to login if no user is found\r\n      window.location.href = '/society/login';\r\n      return;\r\n    }\r\n\r\n    setUser({ token }); // Setting the token in the user state\r\n\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:4069/society/homepage/wall', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        setPosts(response.data);\r\n        console.log('Help posts fetched:', response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch data:', error);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []); */\r\n\r\n  const handleCreatePost = async () => {\r\n    const token = user.token;\r\n    const newPost = { help_descr: helpDescr, bloodDonation };\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:4069/society/homepage/wall', newPost, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      console.log('Create post response:', response.data);\r\n      setPosts([...posts, response.data.helpPost]);\r\n      setHelpDescr('');\r\n      setBloodDonation(false);\r\n      console.log('Help post created:', response.data.helpPost);\r\n    } catch (error) {\r\n      console.error('Failed to create post:', error);\r\n      alert(`Failed to create post: ${error.response ? error.response.data.error : error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleUpdatePost = async (postId, updatedDescription) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:4069/society/homepage/wall/${postId}/update`, { description: updatedDescription }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\r\n      console.log('Help post updated:', response.data.helpPost);\r\n    } catch (error) {\r\n      console.error('Failed to update post:', error);\r\n    }\r\n  };\r\n\r\n  const handleResolvePost = async (postId) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:4069/society/homepage/wall/${postId}/resolve`, {}, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\r\n      console.log('Help post resolved:', response.data.helpPost);\r\n    } catch (error) {\r\n      console.error('Failed to resolve post:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeletePost = async (postId) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      await axios.delete(`http://localhost:4069/society/homepage/wall/${postId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setPosts(posts.filter(post => post._id !== postId));\r\n      console.log('Help post deleted:', postId);\r\n    } catch (error) {\r\n      console.error('Failed to delete post:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddComment = async (postId, commentContent) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:4069/society/homepage/wall/${postId}/comment`, { content: commentContent }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\r\n      console.log('Comment added:', response.data.helpPost);\r\n    } catch (error) {\r\n      console.error('Failed to add comment:', error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateComment = async (postId, commentId, updatedContent) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:4069/society/homepage/wall/${postId}/comment/${commentId}`, { content: updatedContent }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\r\n      console.log('Comment updated:', response.data.helpPost);\r\n    } catch (error) {\r\n      console.error('Failed to update comment:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteComment = async (postId, commentId) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      const response = await axios.delete(`http://localhost:4069/society/homepage/wall/${postId}/comment/${commentId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\r\n      console.log('Comment deleted:', response.data.helpPost);\r\n    } catch (error) {\r\n      console.error('Failed to delete comment:', error);\r\n    }\r\n  };\r\n\r\n  const renderPosts = () => (\r\n    <div className=\"posts-list\">\r\n      {posts.map(post => (\r\n        <div key={post._id} className=\"post-item\">\r\n          <p><strong>Description:</strong> {post.description}</p>\r\n          {post.bloodDonation && <p><strong>Blood Donation Needed</strong></p>}\r\n          <p><strong>Posted by:</strong> {post.user.name}</p>\r\n          <p><strong>Flat Number:</strong> {post.user.flatno}</p>\r\n          <p><strong>Contact Number:</strong> {post.user.contactno}</p>\r\n          {user.id === post.user?._id && !post.resolve_status && (\r\n            <div>\r\n              <button onClick={() => handleUpdatePost(post._id, prompt('Update description:', post.description))}>Update</button>\r\n              <button onClick={() => handleDeletePost(post._id)}>Delete</button>\r\n              <button onClick={() => handleResolvePost(post._id)}>Resolve</button>\r\n            </div>\r\n          )}\r\n          <div className=\"comments-section\">\r\n            {post.comments.map(comment => (\r\n              <div key={comment._id} className=\"comment-item\">\r\n                <p>{comment.content}</p>\r\n                <p><strong>By:</strong> {comment.user.name}</p>\r\n                {user.id === comment.user._id && (\r\n                  <div>\r\n                    <button onClick={() => handleUpdateComment(post._id, comment._id, prompt('Update comment:', comment.content))}>Update</button>\r\n                    <button onClick={() => handleDeleteComment(post._id, comment._id)}>Delete</button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n            <textarea placeholder=\"Add a comment\" onBlur={(e) => handleAddComment(post._id, e.target.value)}></textarea>\r\n            <button onClick={() => handleAddComment(post._id, commentContent)}>Submit Comment</button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <Sidebar />\r\n      <div className=\"main-content\">\r\n        <h2>HelpWall</h2>\r\n        <div className=\"content-sections\">\r\n          <div className=\"create-post-section\">\r\n            <div className=\"create-post-form\">\r\n              <h3>Create a Help Post</h3>\r\n              <label>\r\n                Description:\r\n                <textarea value={helpDescr} onChange={(e) => setHelpDescr(e.target.value)}></textarea>\r\n              </label>\r\n              <label>\r\n                Blood Donation Needed:\r\n                <input type=\"checkbox\" checked={bloodDonation} onChange={(e) => setBloodDonation(e.target.checked)} />\r\n              </label>\r\n              <button onClick={handleCreatePost}>Create Post</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"view-posts-section\">\r\n            {renderPosts()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HelpWall;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}