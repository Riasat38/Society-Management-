{"ast":null,"code":"/*import React, { useState, useEffect } from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport './Directory.css';\r\nimport { getUserFromStorage } from './utils.js'; // Adjust the import path as needed\r\nimport axios from 'axios';\r\n\r\nconst token = getUserFromStorage();\r\n\r\nconst DirectoryPage = () => {\r\n  const [admins, setAdmins] = useState([]);\r\n  const [residents, setResidents] = useState([]);\r\n  const [staffs, setStaffs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n\r\n    \r\n      try {\r\n        console.log(token);\r\n        const adminResponse = await axios.get('http://localhost:4069/society/homepage/admin', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        if (!adminResponse.ok) {\r\n          throw new Error('Failed to fetch admin data');\r\n        }\r\n        const adminData = await adminResponse.json();\r\n        console.log('Admin data fetched:', adminData);\r\n        setAdmins(adminData);\r\n        console.log('Admin data fetched:', adminData);\r\n\r\n        const residentStaffResponse = await fetch('http://localhost:4069/society/homepage/staff', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        if (!residentStaffResponse.ok) {\r\n          throw new Error('Failed to fetch resident and staff data');\r\n        }\r\n        const residentStaffData = await residentStaffResponse.json();\r\n        console.log('Resident and staff data fetched:', residentStaffData);\r\n\r\n        // Process and set residents and staffs data\r\n        setResidents(residentStaffData.residents);\r\n        setStaffs(residentStaffData.staffs);\r\n      } catch (error) {\r\n        console.error('Failed to fetch data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const renderTable = (title, data, columns) => (\r\n    <div className=\"directory-table\">\r\n      <h3>{title}</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {columns.map((col) => (\r\n              <th key={col}>{col}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((item) => (\r\n            <tr key={item._id}>\r\n              {columns.map((col) => (\r\n                <td key={col}>{item[col.toLowerCase()]}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <Sidebar />\r\n      <div className=\"main-content\">\r\n        <h2>Directory</h2>\r\n        {renderTable('Admins', admins, ['Name', 'Email', 'Contact'])}\r\n        {renderTable('Residents', residents, ['Name', 'Email', 'Contact', 'Flatno'])}\r\n        {renderTable('Staffs', staffs, ['Name', 'Email', 'Contact', 'Role'])}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DirectoryPage;  */","map":{"version":3,"names":[],"sources":["C:/Users/USER/Documents/GitHub/Society-Management-/SocietyManagementSystem/frontend/src/components/Directory.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\r\nimport Sidebar from './Sidebar';\r\nimport './Directory.css';\r\nimport { getUserFromStorage } from './utils.js'; // Adjust the import path as needed\r\nimport axios from 'axios';\r\n\r\nconst token = getUserFromStorage();\r\n\r\nconst DirectoryPage = () => {\r\n  const [admins, setAdmins] = useState([]);\r\n  const [residents, setResidents] = useState([]);\r\n  const [staffs, setStaffs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n\r\n    \r\n      try {\r\n        console.log(token);\r\n        const adminResponse = await axios.get('http://localhost:4069/society/homepage/admin', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        if (!adminResponse.ok) {\r\n          throw new Error('Failed to fetch admin data');\r\n        }\r\n        const adminData = await adminResponse.json();\r\n        console.log('Admin data fetched:', adminData);\r\n        setAdmins(adminData);\r\n        console.log('Admin data fetched:', adminData);\r\n\r\n        const residentStaffResponse = await fetch('http://localhost:4069/society/homepage/staff', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        if (!residentStaffResponse.ok) {\r\n          throw new Error('Failed to fetch resident and staff data');\r\n        }\r\n        const residentStaffData = await residentStaffResponse.json();\r\n        console.log('Resident and staff data fetched:', residentStaffData);\r\n\r\n        // Process and set residents and staffs data\r\n        setResidents(residentStaffData.residents);\r\n        setStaffs(residentStaffData.staffs);\r\n      } catch (error) {\r\n        console.error('Failed to fetch data:', error);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const renderTable = (title, data, columns) => (\r\n    <div className=\"directory-table\">\r\n      <h3>{title}</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {columns.map((col) => (\r\n              <th key={col}>{col}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {data.map((item) => (\r\n            <tr key={item._id}>\r\n              {columns.map((col) => (\r\n                <td key={col}>{item[col.toLowerCase()]}</td>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <Sidebar />\r\n      <div className=\"main-content\">\r\n        <h2>Directory</h2>\r\n        {renderTable('Admins', admins, ['Name', 'Email', 'Contact'])}\r\n        {renderTable('Residents', residents, ['Name', 'Email', 'Contact', 'Flatno'])}\r\n        {renderTable('Staffs', staffs, ['Name', 'Email', 'Contact', 'Role'])}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DirectoryPage;  */\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}