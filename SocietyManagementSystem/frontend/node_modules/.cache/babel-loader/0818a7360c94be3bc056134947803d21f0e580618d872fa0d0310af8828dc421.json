{"ast":null,"code":"'use strict';\n\nexport const getUserFromStorage = () => {\n  try {\n    // Retrieve the 'user' object from localStorage\n    const user = localStorage.getItem('user');\n\n    // If 'user' is not found, return null\n    if (!user) {\n      console.warn('No user found in localStorage.');\n      return null;\n    }\n\n    // Parse the JSON string into an object\n    const parsedUser = JSON.parse(user);\n\n    // Check if the parsed object has a 'token' property\n    if (parsedUser && typeof parsedUser === 'object' && parsedUser.token) {\n      //return parsedUser.token; // Return the token\n      return {\n        token: parsedUser.token,\n        usertype: parsedUser.usertype\n      };\n    }\n\n    // If no token exists in the object, log a warning and return null\n    console.warn('User object does not contain a token:', parsedUser);\n    return null;\n  } catch (error) {\n    console.error('Failed to fetch or parse user from localStorage:', error);\n    return null; // Return null in case of errors\n  }\n};","map":{"version":3,"names":["getUserFromStorage","user","localStorage","getItem","console","warn","parsedUser","JSON","parse","token","usertype","error"],"sources":["C:/Users/USER/Documents/GitHub/Society-Management-/SocietyManagementSystem/frontend/src/components/utils.js"],"sourcesContent":["'use strict';\r\n\r\nexport const getUserFromStorage = () => {\r\n    try {\r\n        // Retrieve the 'user' object from localStorage\r\n        const user = localStorage.getItem('user');\r\n\r\n        // If 'user' is not found, return null\r\n        if (!user) {\r\n            console.warn('No user found in localStorage.');\r\n            return null;\r\n        }\r\n\r\n        // Parse the JSON string into an object\r\n        const parsedUser = JSON.parse(user);\r\n\r\n        // Check if the parsed object has a 'token' property\r\n        if (parsedUser && typeof parsedUser === 'object' && parsedUser.token) {\r\n            //return parsedUser.token; // Return the token\r\n            return { token: parsedUser.token, usertype: parsedUser.usertype };\r\n        }\r\n\r\n        // If no token exists in the object, log a warning and return null\r\n        console.warn('User object does not contain a token:', parsedUser);\r\n        return null;\r\n    } catch (error) {\r\n        console.error('Failed to fetch or parse user from localStorage:', error);\r\n        return null; // Return null in case of errors\r\n    }\r\n};\r\n\r\n"],"mappings":"AAAA,YAAY;;AAEZ,OAAO,MAAMA,kBAAkB,GAAGA,CAAA,KAAM;EACpC,IAAI;IACA;IACA,MAAMC,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;;IAEzC;IACA,IAAI,CAACF,IAAI,EAAE;MACPG,OAAO,CAACC,IAAI,CAAC,gCAAgC,CAAC;MAC9C,OAAO,IAAI;IACf;;IAEA;IACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACP,IAAI,CAAC;;IAEnC;IACA,IAAIK,UAAU,IAAI,OAAOA,UAAU,KAAK,QAAQ,IAAIA,UAAU,CAACG,KAAK,EAAE;MAClE;MACA,OAAO;QAAEA,KAAK,EAAEH,UAAU,CAACG,KAAK;QAAEC,QAAQ,EAAEJ,UAAU,CAACI;MAAS,CAAC;IACrE;;IAEA;IACAN,OAAO,CAACC,IAAI,CAAC,uCAAuC,EAAEC,UAAU,CAAC;IACjE,OAAO,IAAI;EACf,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZP,OAAO,CAACO,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;IACxE,OAAO,IAAI,CAAC,CAAC;EACjB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}