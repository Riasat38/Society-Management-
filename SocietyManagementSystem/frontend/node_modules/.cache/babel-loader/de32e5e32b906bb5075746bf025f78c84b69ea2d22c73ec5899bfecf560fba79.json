{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\Society-Management-\\\\SocietyManagementSystem\\\\frontend\\\\src\\\\components\\\\Helpwall.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Sidebar from './Sidebar';\nimport './Helpwall.css';\nimport { getUserFromStorage } from './utils.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HelpWall = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [posts, setPosts] = useState([]);\n  const [helpDescr, setHelpDescr] = useState('');\n  const [bloodDonation, setBloodDonation] = useState(false);\n\n  /*useEffect(() => {\r\n    const token = getUserFromStorage();\r\n      if (!token) {\r\n      // Redirect to login if no user is found\r\n      window.location.href = '/society/login';\r\n      return;\r\n    }\r\n      setUser({ token }); // Setting the token in the user state\r\n      const fetchPosts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:4069/society/homepage/wall', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        setPosts(response.data);\r\n        console.log('Help posts fetched:', response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch data:', error);\r\n      }\r\n    };\r\n      fetchPosts();\r\n  }, []); */\n\n  const handleCreatePost = async () => {\n    const token = user.token;\n    const newPost = {\n      help_descr: helpDescr,\n      bloodDonation\n    };\n    try {\n      const response = await axios.post('http://localhost:4069/society/homepage/wall', newPost, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Create post response:', response.data);\n      setPosts([...posts, response.data.helpPost]);\n      setHelpDescr('');\n      setBloodDonation(false);\n      console.log('Help post created:', response.data.helpPost);\n    } catch (error) {\n      console.error('Failed to create post:', error);\n      alert(`Failed to create post: ${error.response ? error.response.data.error : error.message}`);\n    }\n  };\n  const handleUpdatePost = async (postId, updatedDescription) => {\n    const token = user.token;\n    try {\n      const response = await axios.put(`http://localhost:4069/society/homepage/wall/${postId}/update`, {\n        description: updatedDescription\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\n      console.log('Help post updated:', response.data.helpPost);\n    } catch (error) {\n      console.error('Failed to update post:', error);\n    }\n  };\n  const handleResolvePost = async postId => {\n    const token = user.token;\n    try {\n      const response = await axios.put(`http://localhost:4069/society/homepage/wall/${postId}/resolve`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\n      console.log('Help post resolved:', response.data.helpPost);\n    } catch (error) {\n      console.error('Failed to resolve post:', error);\n    }\n  };\n  const handleDeletePost = async postId => {\n    const token = user.token;\n    try {\n      await axios.delete(`http://localhost:4069/society/homepage/wall/${postId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setPosts(posts.filter(post => post._id !== postId));\n      console.log('Help post deleted:', postId);\n    } catch (error) {\n      console.error('Failed to delete post:', error);\n    }\n  };\n  const handleAddComment = async (postId, commentContent) => {\n    const token = user.token;\n    try {\n      const response = await axios.post(`http://localhost:4069/society/homepage/wall/${postId}/comment`, {\n        content: commentContent\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\n      console.log('Comment added:', response.data.helpPost);\n    } catch (error) {\n      console.error('Failed to add comment:', error);\n    }\n  };\n  const handleUpdateComment = async (postId, commentId, updatedContent) => {\n    const token = user.token;\n    try {\n      const response = await axios.put(`http://localhost:4069/society/homepage/wall/${postId}/comment/${commentId}`, {\n        content: updatedContent\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\n      console.log('Comment updated:', response.data.helpPost);\n    } catch (error) {\n      console.error('Failed to update comment:', error);\n    }\n  };\n  const handleDeleteComment = async (postId, commentId) => {\n    const token = user.token;\n    try {\n      const response = await axios.delete(`http://localhost:4069/society/homepage/wall/${postId}/comment/${commentId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\n      console.log('Comment deleted:', response.data.helpPost);\n    } catch (error) {\n      console.error('Failed to delete comment:', error);\n    }\n  };\n  const renderPosts = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posts-list\",\n    children: posts.map(post => {\n      var _post$user, _post$user2, _post$user3, _post$user4;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 14\n          }, this), \" \", post.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), post.bloodDonation && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Blood Donation Needed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Posted by:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 14\n          }, this), \" \", (_post$user = post.user) === null || _post$user === void 0 ? void 0 : _post$user.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Flat Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 14\n          }, this), \" \", (_post$user2 = post.user) === null || _post$user2 === void 0 ? void 0 : _post$user2.flatno]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Contact Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 14\n          }, this), \" \", (_post$user3 = post.user) === null || _post$user3 === void 0 ? void 0 : _post$user3.contactno]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), user.id === ((_post$user4 = post.user) === null || _post$user4 === void 0 ? void 0 : _post$user4._id) && !post.resolve_status && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleUpdatePost(post._id, prompt('Update description:', post.description)),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeletePost(post._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleResolvePost(post._id),\n            children: \"Resolve\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"comments-section\",\n          children: [post.comments.map(comment => {\n            var _comment$user, _comment$user2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"comment-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: comment.content\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"By:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 20\n                }, this), \" \", (_comment$user = comment.user) === null || _comment$user === void 0 ? void 0 : _comment$user.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this), user.id === ((_comment$user2 = comment.user) === null || _comment$user2 === void 0 ? void 0 : _comment$user2._id) && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleUpdateComment(post._id, comment._id, prompt('Update comment:', comment.content)),\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => handleDeleteComment(post._id, comment._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)]\n            }, comment._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 15\n            }, this);\n          }), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            placeholder: \"Add a comment\",\n            onBlur: e => handleAddComment(post._id, e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 11\n        }, this)]\n      }, post._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"HelpWall\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-sections\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-post-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-post-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Create a Help Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: helpDescr,\n                onChange: e => setHelpDescr(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Blood Donation Needed:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: bloodDonation,\n                onChange: e => setBloodDonation(e.target.checked)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCreatePost,\n              children: \"Create Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-posts-section\",\n          children: renderPosts()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 210,\n    columnNumber: 5\n  }, this);\n};\n_s(HelpWall, \"B+9e3aitpg5jb0kfkwOY2UdTVhQ=\");\n_c = HelpWall;\nexport default HelpWall;\nvar _c;\n$RefreshReg$(_c, \"HelpWall\");","map":{"version":3,"names":["React","useState","useEffect","axios","Sidebar","getUserFromStorage","jsxDEV","_jsxDEV","HelpWall","_s","user","setUser","posts","setPosts","helpDescr","setHelpDescr","bloodDonation","setBloodDonation","handleCreatePost","token","newPost","help_descr","response","post","headers","console","log","data","helpPost","error","alert","message","handleUpdatePost","postId","updatedDescription","put","description","map","_id","handleResolvePost","handleDeletePost","delete","filter","handleAddComment","commentContent","content","handleUpdateComment","commentId","updatedContent","handleDeleteComment","renderPosts","className","children","_post$user","_post$user2","_post$user3","_post$user4","fileName","_jsxFileName","lineNumber","columnNumber","name","flatno","contactno","id","resolve_status","onClick","prompt","comments","comment","_comment$user","_comment$user2","placeholder","onBlur","e","target","value","onChange","type","checked","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/GitHub/Society-Management-/SocietyManagementSystem/frontend/src/components/Helpwall.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Sidebar from './Sidebar';\r\nimport './Helpwall.css';\r\nimport { getUserFromStorage } from './utils.js';\r\n\r\nconst HelpWall = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [posts, setPosts] = useState([]);\r\n  const [helpDescr, setHelpDescr] = useState('');\r\n  const [bloodDonation, setBloodDonation] = useState(false);\r\n\r\n  /*useEffect(() => {\r\n    const token = getUserFromStorage();\r\n\r\n    if (!token) {\r\n      // Redirect to login if no user is found\r\n      window.location.href = '/society/login';\r\n      return;\r\n    }\r\n\r\n    setUser({ token }); // Setting the token in the user state\r\n\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:4069/society/homepage/wall', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        setPosts(response.data);\r\n        console.log('Help posts fetched:', response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch data:', error);\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []); */\r\n\r\n  const handleCreatePost = async () => {\r\n    const token = user.token;\r\n    const newPost = { help_descr: helpDescr, bloodDonation };\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:4069/society/homepage/wall', newPost, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      console.log('Create post response:', response.data);\r\n      setPosts([...posts, response.data.helpPost]);\r\n      setHelpDescr('');\r\n      setBloodDonation(false);\r\n      console.log('Help post created:', response.data.helpPost);\r\n    } catch (error) {\r\n      console.error('Failed to create post:', error);\r\n      alert(`Failed to create post: ${error.response ? error.response.data.error : error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleUpdatePost = async (postId, updatedDescription) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:4069/society/homepage/wall/${postId}/update`, { description: updatedDescription }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\r\n      console.log('Help post updated:', response.data.helpPost);\r\n    } catch (error) {\r\n      console.error('Failed to update post:', error);\r\n    }\r\n  };\r\n\r\n  const handleResolvePost = async (postId) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:4069/society/homepage/wall/${postId}/resolve`, {}, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\r\n      console.log('Help post resolved:', response.data.helpPost);\r\n    } catch (error) {\r\n      console.error('Failed to resolve post:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeletePost = async (postId) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      await axios.delete(`http://localhost:4069/society/homepage/wall/${postId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setPosts(posts.filter(post => post._id !== postId));\r\n      console.log('Help post deleted:', postId);\r\n    } catch (error) {\r\n      console.error('Failed to delete post:', error);\r\n    }\r\n  };\r\n\r\n  const handleAddComment = async (postId, commentContent) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:4069/society/homepage/wall/${postId}/comment`, { content: commentContent }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\r\n      console.log('Comment added:', response.data.helpPost);\r\n    } catch (error) {\r\n      console.error('Failed to add comment:', error);\r\n    }\r\n  };\r\n\r\n  const handleUpdateComment = async (postId, commentId, updatedContent) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:4069/society/homepage/wall/${postId}/comment/${commentId}`, { content: updatedContent }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\r\n      console.log('Comment updated:', response.data.helpPost);\r\n    } catch (error) {\r\n      console.error('Failed to update comment:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteComment = async (postId, commentId) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      const response = await axios.delete(`http://localhost:4069/society/homepage/wall/${postId}/comment/${commentId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setPosts(posts.map(post => post._id === postId ? response.data.helpPost : post));\r\n      console.log('Comment deleted:', response.data.helpPost);\r\n    } catch (error) {\r\n      console.error('Failed to delete comment:', error);\r\n    }\r\n  };\r\n\r\n  const renderPosts = () => (\r\n    <div className=\"posts-list\">\r\n      {posts.map(post => (\r\n        <div key={post._id} className=\"post-item\">\r\n          <p><strong>Description:</strong> {post.description}</p>\r\n          {post.bloodDonation && <p><strong>Blood Donation Needed</strong></p>}\r\n          <p><strong>Posted by:</strong> {post.user?.name}</p>\r\n          <p><strong>Flat Number:</strong> {post.user?.flatno}</p>\r\n          <p><strong>Contact Number:</strong> {post.user?.contactno}</p>\r\n          {user.id === post.user?._id && !post.resolve_status && (\r\n            <div>\r\n              <button onClick={() => handleUpdatePost(post._id, prompt('Update description:', post.description))}>Update</button>\r\n              <button onClick={() => handleDeletePost(post._id)}>Delete</button>\r\n              <button onClick={() => handleResolvePost(post._id)}>Resolve</button>\r\n            </div>\r\n          )}\r\n          <div className=\"comments-section\">\r\n            {post.comments.map(comment => (\r\n              <div key={comment._id} className=\"comment-item\">\r\n                <p>{comment.content}</p>\r\n                <p><strong>By:</strong> {comment.user?.name}</p>\r\n                {user.id === comment.user?._id && (\r\n                  <div>\r\n                    <button onClick={() => handleUpdateComment(post._id, comment._id, prompt('Update comment:', comment.content))}>Update</button>\r\n                    <button onClick={() => handleDeleteComment(post._id, comment._id)}>Delete</button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            ))}\r\n            <textarea placeholder=\"Add a comment\" onBlur={(e) => handleAddComment(post._id, e.target.value)}></textarea>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <Sidebar />\r\n      <div className=\"main-content\">\r\n        <h2>HelpWall</h2>\r\n        <div className=\"content-sections\">\r\n          <div className=\"create-post-section\">\r\n            <div className=\"create-post-form\">\r\n              <h3>Create a Help Post</h3>\r\n              <label>\r\n                Description:\r\n                <textarea value={helpDescr} onChange={(e) => setHelpDescr(e.target.value)}></textarea>\r\n              </label>\r\n              <label>\r\n                Blood Donation Needed:\r\n                <input type=\"checkbox\" checked={bloodDonation} onChange={(e) => setBloodDonation(e.target.checked)} />\r\n              </label>\r\n              <button onClick={handleCreatePost}>Create Post</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"view-posts-section\">\r\n            {renderPosts()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HelpWall;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}