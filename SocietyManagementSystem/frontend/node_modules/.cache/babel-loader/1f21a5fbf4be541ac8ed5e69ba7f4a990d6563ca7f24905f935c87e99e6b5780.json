{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\GitHub\\\\Society-Management-\\\\SocietyManagementSystem\\\\frontend\\\\src\\\\components\\\\Services.js\",\n  _s = $RefreshSig$();\n/*import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Sidebar from './Sidebar';\r\nimport './Services.css';\r\nimport { getUserFromStorage } from './utils.js';\r\n\r\nconst MaintenancePage = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [requests, setRequests] = useState([]);\r\n  const [issueDescription, setIssueDescription] = useState('');\r\n  const [issueLocation, setIssueLocation] = useState('');\r\n  const [priority, setPriority] = useState('Low');\r\n\r\n  useEffect(() => {\r\n    const token = getUserFromStorage();\r\n\r\n    if (!token) {\r\n      // Redirect to login if no user is found\r\n      window.location.href = '/society/login';\r\n      return;\r\n    }\r\n\r\n    setUser({ token }); // Setting the token in the user state\r\n\r\n    const fetchRequests = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:4069/society/homepage/services', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        setRequests(response.data);\r\n        console.log('Maintenance requests fetched:', response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch data:', error);\r\n      }\r\n    };\r\n\r\n    fetchRequests();\r\n  }, []);\r\n\r\n\r\n  const handleCreateRequest = async () => {\r\n    const token = user.token;\r\n    const newRequest = { issueDescription, issueLocation, priority };\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:4069/society/homepage/services', newRequest, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      console.log('Create request response:', response.data);\r\n      setRequests([...requests, response.data.maintenanceRequest]);\r\n      setIssueDescription('');\r\n      setIssueLocation('');\r\n      setPriority('Low');\r\n      console.log('Maintenance request created:', response.data.maintenanceRequest);\r\n    } catch (error) {\r\n      console.error('Failed to create request:', error);\r\n      alert(`Failed to create request: ${error.response ? error.response.data.error : error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleUpdateRequest = async (requestId, updatedDescription) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:4069/society/homepage/services/${requestId}/update`, { description: updatedDescription }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setRequests(requests.map(request => request._id === requestId ? response.data.maintenanceRequest : request));\r\n      console.log('Maintenance request updated:', response.data.maintenanceRequest);\r\n    } catch (error) {\r\n      console.error('Failed to update request:', error);\r\n    }\r\n  };\r\n\r\n  const handleResolveRequest = async (requestId) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:4069/society/homepage/services/${requestId}/resolve`, {}, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setRequests(requests.map(request => request._id === requestId ? response.data.maintenanceRequest : request));\r\n      console.log('Maintenance request resolved:', response.data.maintenanceRequest);\r\n    } catch (error) {\r\n      console.error('Failed to resolve request:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteRequest = async (requestId) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      await axios.delete(`http://localhost:4069/society/homepage/services/${requestId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setRequests(requests.filter(request => request._id !== requestId));\r\n      console.log('Maintenance request deleted:', requestId);\r\n    } catch (error) {\r\n      console.error('Failed to delete request:', error);\r\n    }\r\n  };\r\n\r\n  const renderRequests = () => (\r\n    <div className=\"requests-list\">\r\n      {requests.map(request => (\r\n        <div key={request._id} className=\"request-item\">\r\n          <p><strong>Description:</strong> {request.issueDescription}</p>\r\n          <p><strong>Location:</strong> {request.issueLocation}</p>\r\n          <p><strong>Priority:</strong> {request.priority}</p>\r\n          <button onClick={() => handleUpdateRequest(request._id, prompt('Update description:', request.issueDescription))}>Update</button>\r\n          <button onClick={() => handleDeleteRequest(request._id)}>Delete</button>\r\n          <button onClick={() => handleResolveRequest(request._id)}>Resolve</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <Sidebar />\r\n      <div className=\"main-content\">\r\n        <h2>Maintenance Requests</h2>\r\n        <div className=\"content-sections\">\r\n          <div className=\"create-request-section\">\r\n            <div className=\"create-request-form\">\r\n              <h3>Create a Maintenance Request</h3>\r\n              <label>\r\n                Description:\r\n                <textarea value={issueDescription} onChange={(e) => setIssueDescription(e.target.value)}></textarea>\r\n              </label>\r\n              <label>\r\n                Location:\r\n                <input type=\"text\" value={issueLocation} onChange={(e) => setIssueLocation(e.target.value)} />\r\n              </label>\r\n              <label>\r\n                Priority:\r\n                <select value={priority} onChange={(e) => setPriority(e.target.value)}>\r\n                  <option value=\"Low\">Low</option>\r\n                  <option value=\"Medium\">Medium</option>\r\n                  <option value=\"High\">High</option>\r\n                </select>\r\n              </label>\r\n              <button onClick={handleCreateRequest}>Submit Request</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"view-requests-section\">\r\n            {renderRequests()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaintenancePage; */\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Sidebar from './Sidebar';\nimport './Services.css';\nimport { getUserFromStorage } from './utils.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MaintenancePage = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [requests, setRequests] = useState([]); // Ensure requests is initialized as an array\n  const [serviceType, setServiceType] = useState('Electric'); // Service type dropdown\n  const [issueDescription, setIssueDescription] = useState(''); // Description textarea\n\n  useEffect(() => {\n    const token = getUserFromStorage();\n    if (!token) {\n      // Redirect to login if no user is found\n      window.location.href = '/society/login';\n      return;\n    }\n    setUser({\n      token\n    }); // Setting the token in the user state\n\n    const fetchRequests = async () => {\n      try {\n        const response = await axios.get('http://localhost:4069/society/homepage/services', {\n          headers: {\n            'Authorization': `Bearer ${token}`,\n            'Content-Type': 'application/json'\n          }\n        });\n        if (Array.isArray(response.data.serviceRequests)) {\n          setRequests(response.data.serviceRequests);\n        } else {\n          setRequests([]); // Handle non-array response\n        }\n        console.log('Maintenance requests fetched:', response.data.serviceRequests);\n      } catch (error) {\n        console.error('Failed to fetch data:', error);\n      }\n    };\n    fetchRequests();\n  }, []);\n  const handleCreateRequest = async () => {\n    const token = user.token;\n    const newRequest = {\n      serviceType,\n      description: issueDescription\n    };\n    try {\n      const response = await axios.post(`http://localhost:4069/society/homepage/services/${serviceType}`, newRequest, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Create request response:', response.data);\n      setRequests([...requests, response.data.service]); // Update state to include new request\n      setServiceType('Electric'); // Reset to default\n      setIssueDescription('');\n      console.log('Maintenance request created:', response.data.service);\n    } catch (error) {\n      console.error('Failed to create request:', error);\n      alert(`Failed to create request: ${error.response ? error.response.data.error : error.message}`);\n    }\n  };\n  const handleUpdateRequest = async (requestId, updatedDescription) => {\n    const token = user.token;\n    try {\n      const response = await axios.put(`http://localhost:4069/society/homepage/services/${requestId}/update`, {\n        description: updatedDescription\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setRequests(requests.map(request => request._id === requestId ? response.data.maintenanceRequest : request));\n      console.log('Maintenance request updated:', response.data.maintenanceRequest);\n    } catch (error) {\n      console.error('Failed to update request:', error);\n    }\n  };\n  const handleResolveRequest = async requestId => {\n    const token = user.token;\n    try {\n      const response = await axios.put(`http://localhost:4069/society/homepage/services/${requestId}/resolve`, {}, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setRequests(requests.map(request => request._id === requestId ? response.data.maintenanceRequest : request));\n      console.log('Maintenance request resolved:', response.data.maintenanceRequest);\n    } catch (error) {\n      console.error('Failed to resolve request:', error);\n    }\n  };\n  const handleDeleteRequest = async requestId => {\n    const token = user.token;\n    try {\n      await axios.delete(`http://localhost:4069/society/homepage/services/${requestId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      setRequests(requests.filter(request => request._id !== requestId));\n      console.log('Maintenance request deleted:', requestId);\n    } catch (error) {\n      console.error('Failed to delete request:', error);\n    }\n  };\n  const renderRequests = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"requests-list\",\n    children: Array.isArray(requests) && requests.map(request => {\n      var _request$user, _request$user2, _request$user3;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"request-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Service Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 14\n          }, this), \" \", request.serviceType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 14\n          }, this), \" \", request.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Posted by:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 14\n          }, this), \" \", ((_request$user = request.user) === null || _request$user === void 0 ? void 0 : _request$user.name) || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Contact Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 14\n          }, this), \" \", ((_request$user2 = request.user) === null || _request$user2 === void 0 ? void 0 : _request$user2.contactno) || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Flat Number:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 14\n          }, this), \" \", ((_request$user3 = request.user) === null || _request$user3 === void 0 ? void 0 : _request$user3.flatno) || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdateRequest(request._id, prompt('Update description:', request.description)),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteRequest(request._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleResolveRequest(request._id),\n          children: \"Resolve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this)]\n      }, request._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 9\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Maintenance Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"content-sections\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-request-section\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-request-form\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Create a Maintenance Request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Service Type:\", /*#__PURE__*/_jsxDEV(\"select\", {\n                value: serviceType,\n                onChange: e => setServiceType(e.target.value),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Electrician\",\n                  children: \"Electrician\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Plumber\",\n                  children: \"Plumber\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: \"Others\",\n                  children: \"Others\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Description:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n                value: issueDescription,\n                onChange: e => setIssueDescription(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleCreateRequest,\n              children: \"Submit Request\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"view-requests-section\",\n          children: renderRequests()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 5\n  }, this);\n};\n_s(MaintenancePage, \"jVDY4172Q2tcJm9oLAwp/OTNaCk=\");\n_c = MaintenancePage;\nexport default MaintenancePage;\nvar _c;\n$RefreshReg$(_c, \"MaintenancePage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Sidebar","getUserFromStorage","jsxDEV","_jsxDEV","MaintenancePage","_s","user","setUser","requests","setRequests","serviceType","setServiceType","issueDescription","setIssueDescription","token","window","location","href","fetchRequests","response","get","headers","Array","isArray","data","serviceRequests","console","log","error","handleCreateRequest","newRequest","description","post","service","alert","message","handleUpdateRequest","requestId","updatedDescription","put","map","request","_id","maintenanceRequest","handleResolveRequest","handleDeleteRequest","delete","filter","renderRequests","className","children","_request$user","_request$user2","_request$user3","fileName","_jsxFileName","lineNumber","columnNumber","name","contactno","flatno","onClick","prompt","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/GitHub/Society-Management-/SocietyManagementSystem/frontend/src/components/Services.js"],"sourcesContent":["/*import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Sidebar from './Sidebar';\r\nimport './Services.css';\r\nimport { getUserFromStorage } from './utils.js';\r\n\r\nconst MaintenancePage = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [requests, setRequests] = useState([]);\r\n  const [issueDescription, setIssueDescription] = useState('');\r\n  const [issueLocation, setIssueLocation] = useState('');\r\n  const [priority, setPriority] = useState('Low');\r\n\r\n  useEffect(() => {\r\n    const token = getUserFromStorage();\r\n\r\n    if (!token) {\r\n      // Redirect to login if no user is found\r\n      window.location.href = '/society/login';\r\n      return;\r\n    }\r\n\r\n    setUser({ token }); // Setting the token in the user state\r\n\r\n    const fetchRequests = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:4069/society/homepage/services', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n        setRequests(response.data);\r\n        console.log('Maintenance requests fetched:', response.data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch data:', error);\r\n      }\r\n    };\r\n\r\n    fetchRequests();\r\n  }, []);\r\n\r\n\r\n  const handleCreateRequest = async () => {\r\n    const token = user.token;\r\n    const newRequest = { issueDescription, issueLocation, priority };\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:4069/society/homepage/services', newRequest, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      console.log('Create request response:', response.data);\r\n      setRequests([...requests, response.data.maintenanceRequest]);\r\n      setIssueDescription('');\r\n      setIssueLocation('');\r\n      setPriority('Low');\r\n      console.log('Maintenance request created:', response.data.maintenanceRequest);\r\n    } catch (error) {\r\n      console.error('Failed to create request:', error);\r\n      alert(`Failed to create request: ${error.response ? error.response.data.error : error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleUpdateRequest = async (requestId, updatedDescription) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:4069/society/homepage/services/${requestId}/update`, { description: updatedDescription }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setRequests(requests.map(request => request._id === requestId ? response.data.maintenanceRequest : request));\r\n      console.log('Maintenance request updated:', response.data.maintenanceRequest);\r\n    } catch (error) {\r\n      console.error('Failed to update request:', error);\r\n    }\r\n  };\r\n\r\n  const handleResolveRequest = async (requestId) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:4069/society/homepage/services/${requestId}/resolve`, {}, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setRequests(requests.map(request => request._id === requestId ? response.data.maintenanceRequest : request));\r\n      console.log('Maintenance request resolved:', response.data.maintenanceRequest);\r\n    } catch (error) {\r\n      console.error('Failed to resolve request:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteRequest = async (requestId) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      await axios.delete(`http://localhost:4069/society/homepage/services/${requestId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setRequests(requests.filter(request => request._id !== requestId));\r\n      console.log('Maintenance request deleted:', requestId);\r\n    } catch (error) {\r\n      console.error('Failed to delete request:', error);\r\n    }\r\n  };\r\n\r\n  const renderRequests = () => (\r\n    <div className=\"requests-list\">\r\n      {requests.map(request => (\r\n        <div key={request._id} className=\"request-item\">\r\n          <p><strong>Description:</strong> {request.issueDescription}</p>\r\n          <p><strong>Location:</strong> {request.issueLocation}</p>\r\n          <p><strong>Priority:</strong> {request.priority}</p>\r\n          <button onClick={() => handleUpdateRequest(request._id, prompt('Update description:', request.issueDescription))}>Update</button>\r\n          <button onClick={() => handleDeleteRequest(request._id)}>Delete</button>\r\n          <button onClick={() => handleResolveRequest(request._id)}>Resolve</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <Sidebar />\r\n      <div className=\"main-content\">\r\n        <h2>Maintenance Requests</h2>\r\n        <div className=\"content-sections\">\r\n          <div className=\"create-request-section\">\r\n            <div className=\"create-request-form\">\r\n              <h3>Create a Maintenance Request</h3>\r\n              <label>\r\n                Description:\r\n                <textarea value={issueDescription} onChange={(e) => setIssueDescription(e.target.value)}></textarea>\r\n              </label>\r\n              <label>\r\n                Location:\r\n                <input type=\"text\" value={issueLocation} onChange={(e) => setIssueLocation(e.target.value)} />\r\n              </label>\r\n              <label>\r\n                Priority:\r\n                <select value={priority} onChange={(e) => setPriority(e.target.value)}>\r\n                  <option value=\"Low\">Low</option>\r\n                  <option value=\"Medium\">Medium</option>\r\n                  <option value=\"High\">High</option>\r\n                </select>\r\n              </label>\r\n              <button onClick={handleCreateRequest}>Submit Request</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"view-requests-section\">\r\n            {renderRequests()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaintenancePage; */\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Sidebar from './Sidebar';\r\nimport './Services.css';\r\nimport { getUserFromStorage } from './utils.js';\r\n\r\nconst MaintenancePage = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [requests, setRequests] = useState([]); // Ensure requests is initialized as an array\r\n  const [serviceType, setServiceType] = useState('Electric'); // Service type dropdown\r\n  const [issueDescription, setIssueDescription] = useState(''); // Description textarea\r\n\r\n  useEffect(() => {\r\n    const token = getUserFromStorage();\r\n\r\n    if (!token) {\r\n      // Redirect to login if no user is found\r\n      window.location.href = '/society/login';\r\n      return;\r\n    }\r\n\r\n    setUser({ token }); // Setting the token in the user state\r\n\r\n    const fetchRequests = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:4069/society/homepage/services', {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`,\r\n            'Content-Type': 'application/json'\r\n          }\r\n        });\r\n\r\n        if (Array.isArray(response.data.serviceRequests)) {\r\n          setRequests(response.data.serviceRequests);\r\n        } else {\r\n          setRequests([]); // Handle non-array response\r\n        }\r\n        console.log('Maintenance requests fetched:', response.data.serviceRequests);\r\n      } catch (error) {\r\n        console.error('Failed to fetch data:', error);\r\n      }\r\n    };\r\n\r\n    fetchRequests();\r\n  }, []);\r\n\r\n  const handleCreateRequest = async () => {\r\n    const token = user.token;\r\n    const newRequest = { serviceType, description: issueDescription };\r\n\r\n    try {\r\n      const response = await axios.post(`http://localhost:4069/society/homepage/services/${serviceType}`, newRequest, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      console.log('Create request response:', response.data);\r\n      setRequests([...requests, response.data.service]); // Update state to include new request\r\n      setServiceType('Electric'); // Reset to default\r\n      setIssueDescription('');\r\n      console.log('Maintenance request created:', response.data.service);\r\n    } catch (error) {\r\n      console.error('Failed to create request:', error);\r\n      alert(`Failed to create request: ${error.response ? error.response.data.error : error.message}`);\r\n    }\r\n  };\r\n\r\n  const handleUpdateRequest = async (requestId, updatedDescription) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:4069/society/homepage/services/${requestId}/update`, { description: updatedDescription }, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setRequests(requests.map(request => request._id === requestId ? response.data.maintenanceRequest : request));\r\n      console.log('Maintenance request updated:', response.data.maintenanceRequest);\r\n    } catch (error) {\r\n      console.error('Failed to update request:', error);\r\n    }\r\n  };\r\n\r\n  const handleResolveRequest = async (requestId) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      const response = await axios.put(`http://localhost:4069/society/homepage/services/${requestId}/resolve`, {}, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setRequests(requests.map(request => request._id === requestId ? response.data.maintenanceRequest : request));\r\n      console.log('Maintenance request resolved:', response.data.maintenanceRequest);\r\n    } catch (error) {\r\n      console.error('Failed to resolve request:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteRequest = async (requestId) => {\r\n    const token = user.token;\r\n\r\n    try {\r\n      await axios.delete(`http://localhost:4069/society/homepage/services/${requestId}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n\r\n      setRequests(requests.filter(request => request._id !== requestId));\r\n      console.log('Maintenance request deleted:', requestId);\r\n    } catch (error) {\r\n      console.error('Failed to delete request:', error);\r\n    }\r\n  };\r\n\r\n  const renderRequests = () => (\r\n    <div className=\"requests-list\">\r\n      {Array.isArray(requests) && requests.map(request => (\r\n        <div key={request._id} className=\"request-item\">\r\n          <p><strong>Service Type:</strong> {request.serviceType}</p>\r\n          <p><strong>Description:</strong> {request.description}</p>\r\n          <p><strong>Posted by:</strong> {request.user?.name || 'N/A'}</p>\r\n          <p><strong>Contact Number:</strong> {request.user?.contactno || 'N/A'}</p>\r\n          <p><strong>Flat Number:</strong> {request.user?.flatno || 'N/A'}</p>\r\n          <button onClick={() => handleUpdateRequest(request._id, prompt('Update description:', request.description))}>Update</button>\r\n          <button onClick={() => handleDeleteRequest(request._id)}>Delete</button>\r\n          <button onClick={() => handleResolveRequest(request._id)}>Resolve</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n  \r\n  \r\n  \r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <Sidebar />\r\n      <div className=\"main-content\">\r\n        <h2>Maintenance Requests</h2>\r\n        <div className=\"content-sections\">\r\n          <div className=\"create-request-section\">\r\n            <div className=\"create-request-form\">\r\n              <h3>Create a Maintenance Request</h3>\r\n              <label>\r\n                Service Type:\r\n                <select value={serviceType} onChange={(e) => setServiceType(e.target.value)}>\r\n                  <option value=\"Electrician\">Electrician</option>\r\n                  <option value=\"Plumber\">Plumber</option>\r\n                  <option value=\"Others\">Others</option>\r\n                </select>\r\n              </label>\r\n              <label>\r\n                Description:\r\n                <textarea value={issueDescription} onChange={(e) => setIssueDescription(e.target.value)}></textarea>\r\n              </label>\r\n              <button onClick={handleCreateRequest}>Submit Request</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"view-requests-section\">\r\n            {renderRequests()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MaintenancePage;"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}